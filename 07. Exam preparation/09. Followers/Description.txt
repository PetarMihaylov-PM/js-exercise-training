Create a program that keeps the information about Jane's Facebook followers, their likes, and comments. Keep a record of the followers, each with the count of likes and comments Jane has received from them.
You will be receiving lines with commands until you receive the "Log out" command. There are four possible commands:
•	"New follower: {username}":
o	Add the username to your records (with 0 likes and 0 comments).
o	If a person with the given username already exists, ignore the line.
•	"Like: {username}: {count}":
o	If the username doesn't exist, add it to your records with the given count of likes.
o	If the username exists, increase the count of likes with the given count.
•	"Comment: {username}":
o	If the username doesn't exist, add it to your records with 1 comment.
o	If the username exists, increase the count of comments with 1.
•	"Blocked: {username}":
o	Delete all records of the given username. 
o	If it doesn't exist, print: "{Username} doesn't exist."
In the end, you have to print the count of followers, each follower with their likes and comments (the sum of likes and comments):
"{count} followers"
{username}: {likes+comments}
{username}: {likes+comments}
…
{username}: {likes+comments}"
Input
•	You will be receiving lines until you receive the "Log out" command.
•	The input will always be valid.
Output
•	Print the users with their likes in the format described above.
JS Examples
The input will be provided as an array of strings.
Input	Output
(["New follower: George",
"Like: George: 5",
"New follower: George",
"Log out"])	1 followers
George: 5
(["Like: Katy: 3",
"Comment: Katy",
"New follower: Bob",
"Blocked: Bob",
"New follower: Amy",
"Like: Amy: 4",
"Log out"])	2 followers
Katy: 4
Amy: 4
(["Blocked: Amy",
"Comment: Amy",
"New follower: Amy",
"Like: Tom: 5",
"Like: Ellie: 5",
"Log out"])	Amy doesn't exist.
3 followers
Amy: 1
Tom: 5
Ellie: 5
